{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/Tags.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","hooks/useBlock.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","BigNumber","times","toString","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useSousStake","sousId","isUsingBnb","dispatch","useDispatch","useWallet","account","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","useCallback","amount","a","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","pid","txHash","fetchFarmUserDataAsync","console","info","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","updateUserPendingReward","useUnstake","useBlock","BlockContext","Card","card","background","isFinished","isActive","CardTitle","Balance","text","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","style","padding","role","aria-label","src","width","height","alt","as","href","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","getBalanceNumber","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","block","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/9.618578f9.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? CAKE</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'SYRUP Pool')}\n          </Heading>\n        </div>\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}