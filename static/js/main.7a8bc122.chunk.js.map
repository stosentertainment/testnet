{"version":3,"sources":["state/actions.ts","state/stos/index.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","state/index.ts","state/prices/index.ts","contexts/Localisation/translationsContext.ts","config/constants/types.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/contracts.ts","contexts/BlockContext.tsx","utils/multicall.ts","utils/addressHelpers.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","Providers.tsx","index.tsx","state/hooks.ts","utils/web3.ts","hooks/useRefresh.ts"],"names":["stosSlice","createSlice","name","initialState","data","price","totalSupply","reducers","setPriceData","state","action","priceData","payload","setTotalSupplyData","totalSupplyData","actions","fetchPriceDataAsync","dispatch","a","STOSValue","fetch","then","res","json","result","status","error","catch","fetchTotalSupplyDataAsync","totalSupplyValue","fetchFarmUserAllowances","account","masterChefAdress","getMasterChefAddress","calls","farmsConfig","map","farm","address","isTokenOnly","tokenAddresses","CHAIN_ID","lpAddresses","params","multicall","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","BigNumber","toJSON","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","pid","masterchefABI","rawStakedBalances","parsedStakedBalances","stakedBalance","_hex","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsSlice","setFarmsPublicData","liveFarmsData","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","nodes","process","getNodeUrl","randomIndex","random","length","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","store","configureStore","devTools","reducer","farms","farmsReducer","pools","poolsReducer","stos","stosReducer","prices","pricesReducer","useAppDispatch","useDispatch","fetchPrices","createAsyncThunk","response","updated_at","Object","keys","reduce","accum","token","toLowerCase","parseFloat","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","defaultTranslationState","translations","setTranslations","TranslationsContext","QuoteToken","PoolCategory","Container","styled","div","theme","mediaQueries","sm","Page","lg","cake","56","97","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","abi","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","encodeFunctionData","methods","aggregate","returnData","i","decodeFunctionResult","getCakeAddress","addresses","chainId","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","sousId","tokenName","stakingTokenName","STOS","earningToken","stakingTokenAddress","contractAddress","poolCategory","COMMUNITY","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","tokenDecimals","quoteTokenSymbol","quoteTokenAdresses","contracts","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","filter","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","BNB","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingLife","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","tokenSymbol","BUSD","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","console","log","r","translationApiResponse","e","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","setIsDark","prevState","JSON","stringify","dark","light","useTheme","useContext","StyledThemeCopntext","config","label","icon","href","items","Menu","props","useWallet","connect","reset","useSTOSPrice","login","logout","currentLang","langs","setLang","cakePriceUsd","toNumber","links","Wrapper","PageLoader","Home","lazy","Pools","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","useFetchPublicData","useFetchPriceData","useFetchTotalSupplyData","Global","fallback","path","exact","component","memo","Providers","rpcUrl","getRpcUrl","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","ZERO","slowRefresh","useRefresh","useFarms","useSelector","useFarmFromPid","usePools","fastRefresh","usePriceBnbBusd","tokenPriceVsQuote","useGetApiPrice","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions"],"mappings":"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","file":"static/js/main.7a8bc122.chunk.js","sourcesContent":["export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { fetchPriceDataAsync, fetchTotalSupplyDataAsync } from './stos'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport { StosState } from '../types'\n\nconst initialState: StosState = { data: { price: 0, totalSupply: 0 } }\n\nexport const stosSlice = createSlice({\n  name: 'Stos',\n  initialState,\n  reducers: {\n    setPriceData: (state, action) => {\n      const priceData = action.payload\n      return { data: { ...state.data, price: priceData } }\n    },\n    setTotalSupplyData: (state, action) => {\n      const totalSupplyData = action.payload\n      return { data: { ...state.data, totalSupply: totalSupplyData } }\n    },\n  },\n})\n\n// Actions\nexport const { setPriceData, setTotalSupplyData } = stosSlice.actions\n\n// Thunks\nexport const fetchPriceDataAsync = () => async (dispatch) => {\n  let STOSValue = 0\n  await fetch(\n    'https://api.stosentertainment.com/price-bnbpool.php?key=236547643&pool=0xe0e3f3698ba35487e5285fdfd31a5b8d8f564d8b&token=0x9eab0a93b0cd5d904493694f041bdcedb97b88c6&decimals=18',\n  )\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        if (result.status === true) {\n          STOSValue = result.data\n        } else {\n          STOSValue = 0\n        }\n      },\n      (error) => {\n        STOSValue = 0\n      },\n    )\n    .catch(() => {\n      STOSValue = 0\n    })\n  dispatch(setPriceData(STOSValue))\n}\n\nexport const fetchTotalSupplyDataAsync = () => async (dispatch) => {\n  let totalSupplyValue = 0\n  await fetch(\n    'https://api.bscscan.com/api?module=stats&action=tokenCsupply&contractaddress=0x9eab0a93b0cd5d904493694f041bdcedb97b88c6&apikey=5E61V2DWBJANXNURC6Q991F828E6W5KX1P&decimals=18',\n  )\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        if (result.status === '1') {\n          totalSupplyValue = result.result / 10 ** 18\n        } else {\n          totalSupplyValue = 0\n        }\n      },\n      (error) => {\n        totalSupplyValue = 0\n      },\n    )\n    .catch(() => {\n      totalSupplyValue = 0\n    })\n  dispatch(setTotalSupplyData(totalSupplyValue))\n}\n\nexport default stosSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingLife',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport stosReducer from './stos'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n    stos: stosReducer,\n    prices: pricesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/v2/tokens')\n  const data = (await response.json()) as PriceApiResponse\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'STOS' = 'STOS',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  earningToken?: string\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  quoteTokenSymbol: string\n  quoteTokenAdresses: { 56: string; 97: string }\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export default {\n  cake: {\n    56: '0x50f4220C82c9325dC99f729C3328FB5c338BEaae',\n    97: '0xADA2270B0CB5b6254d3d48A6fEE55b72693B746A',\n  },\n  masterChef: {\n    56: '0x67905ff1Ada0C11720E7298840206E5bdB8d3646',\n    97: '0xE37Aa693d2Ab77721E11e55bfBC723cf4457b78E',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n  },\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\nimport contracts from './contracts'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 1,\n    tokenName: 'STOS',\n    stakingTokenName: QuoteToken.STOS,\n    earningToken: '0xADA2270B0CB5b6254d3d48A6fEE55b72693B746A',\n    stakingTokenAddress: '0xADA2270B0CB5b6254d3d48A6fEE55b72693B746A',\n    contractAddress: {\n      97: '0x52B0b88b172E0b21f0558605496Ab46bb1Ce0557',\n      56: '0x00',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://stos.finance/',\n    harvest: true,\n    tokenPerBlock: '0.000',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n    quoteTokenSymbol: QuoteToken.STOS,\n    quoteTokenAdresses: contracts.cake,\n  },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingLife('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'STOS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x19e7cbecdd23a16dfa5573df54d98f7caae03019',\n    },\n    tokenSymbol: 'STOS',\n    tokenAddresses: {\n      97: '',\n      56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'STOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd1b59d11316e87c3a0a069e80f590ba35cd8d8d3',\n    },\n    tokenSymbol: 'STOS',\n    tokenAddresses: {\n      97: '',\n      56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 3,\n    risk: 1,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 4,\n    risk: 2,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 5,\n    risk: 2,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 6,\n    risk: 1,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc',\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 7,\n    risk: 1,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 9,\n    risk: 3,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '',\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 10,\n    risk: 4,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 11,\n    risk: 4,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 12,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'STOS',\n    lpAddresses: {\n      97: '',\n      56: '0x19e7cbecdd23a16dfa5573df54d98f7caae03019', // STOS-BUSD LP\n    },\n    tokenSymbol: 'STOS',\n    tokenAddresses: {\n      97: '',\n      56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 13,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'BUSD',\n    lpAddresses: {\n      97: '',\n      56: '0x19e7cbecdd23a16dfa5573df54d98f7caae03019', // STOS-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 14,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BNB-BUSD LP\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 15,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDT',\n    lpAddresses: {\n      97: '',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd', // USDT-BUSD LP\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 16,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'BTCB',\n    lpAddresses: {\n      97: '',\n      56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 17,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'ETH',\n    lpAddresses: {\n      97: '',\n      56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494', // ETH-BUSD LP\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 18,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'DAI',\n    lpAddresses: {\n      97: '',\n      56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc', // DAI-BUSD LP\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 19,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDC',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18', // USDC-BUSD LP\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 20,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'DOT',\n    lpAddresses: {\n      97: '',\n      56: '0x54c1ec2f543966953f2f7564692606ea7d5a184e', // DOT-BUSD LP\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '',\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 21,\n    risk: 4,\n    isTokenOnly: true,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458', // CAKE-BUSD LP\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 22,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'BSCX',\n    lpAddresses: {\n      97: '',\n      56: '0xa32a983a64ce21834221aa0ad1f1533907553136', // BSCX-BUSD LP\n    },\n    tokenSymbol: 'BSCX',\n    tokenAddresses: {\n      97: '',\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 23,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'AUTO',\n    lpAddresses: {\n      97: '',\n      56: '0x4d0228ebeb39f6d2f29ba528e2d15fc9121ead56', // AUTO-BNB LP\n    },\n    tokenSymbol: 'AUTO',\n    tokenAddresses: {\n      97: '',\n      56: '0xa184088a740c695e156f91f5cc086a06bb78b827',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Actor', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    return true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Buy SafeSTOS',\n        href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x9eab0a93b0cd5d904493694f041bdcedb97b88c6',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.pancakeswap.finance/#/pool',\n      },\n    ],\n  },\n  // {\n  //   label: 'Farms',\n  //   icon: 'FarmIcon',\n  //   href: '/farms',\n  // },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: 'NFT',\n  //   icon: 'NftIcon',\n  //   href: '/nft',\n  // },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Bscscan',\n        href: 'https://bscscan.com/token/0x9eab0a93b0cd5d904493694f041bdcedb97b88c6',\n      },\n      {\n        label: 'Chart',\n        href: 'https://charts.bogged.finance/?token=0x9eAB0a93b0cd5d904493694F041BdCedb97b88C6',\n      },\n      {\n        label: 'Coingecko Coming Soon',\n        href: '#',\n      },\n      {\n        label: 'CoinMarketCap Coming Soon',\n        href: '#',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/stosent/',\n      },\n      {\n        label: 'Medium',\n        href: 'https://stos-entertainment-co.medium.com/',\n      },\n    ],\n  },\n  {\n    label: 'Audits Coming Soon',\n    icon: 'AuditIcon',\n    href: '#',\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { useSTOSPrice } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\nimport './style.css'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const STOSValue = useSTOSPrice()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={STOSValue.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData, useFetchPriceList, useFetchPriceData, useFetchTotalSupplyData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\n// const Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\nconst Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  useFetchPriceData()\n\n  useFetchTotalSupplyData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            {/* <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/nests\">\n              <Farms tokenMode />\n            </Route> */}\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n\n      {/* <NftGlobalNotification /> */}\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { useAppDispatch } from 'state'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchPriceDataAsync,\n  fetchTotalSupplyDataAsync,\n} from './actions'\nimport { State, Farm, Pool, PriceState } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport { fetchPrices } from './prices'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    // dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// For Price\nexport const useFetchPriceData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchPriceDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// For Total Supply\nexport const useFetchTotalSupplyData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchTotalSupplyDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[address.toLowerCase()]\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdFarm = useFarmFromPid(2)\n\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\n\n  return cakeBusdPrice\n}\n\nexport const useSTOSPrice = (): BigNumber => {\n  const { price } = useSelector((state: State) => state.stos.data)\n  return price ? new BigNumber(price) : ZERO\n}\n\nexport const useTotalSupplyPrice = (): BigNumber => {\n  const { totalSupply } = useSelector((state: State) => state.stos.data)\n  return totalSupply ? new BigNumber(totalSupply) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const cakePrice = usePriceCakeBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n"],"sourceRoot":""}