{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","config/index.ts","hooks/useBlock.ts","utils/formatBalance.ts","components/layout/Flex.tsx","components/UnlockButton.tsx","components/Label/Label.tsx","hooks/useWeb3.ts","config/constants/index.ts","hooks/useContract.ts","utils/callHelpers.ts","hooks/useUnstake.ts","components/Balance.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","components/Tags.tsx","views/Pools/components/PoolCard.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useHarvest.ts","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","useBlock","BlockContext","getBalanceNumber","balance","decimals","displayBalance","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","FlexLayout","styled","div","UnlockButton","props","TranslateString","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","StyledLabel","isFinished","theme","colors","Label","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","refEth","useRef","useState","web3","setweb3","useEffect","current","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useERC20","erc20","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","approve","lpContract","masterChefContract","account","a","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","SYRUPIDS","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","StyledSpacer","size","Spacer","s","spacing","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","useCallback","e","currentTarget","handleSelectMax","title","fullWidth","variant","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","CardTitle","Card","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","outline","startIcon","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","role","aria-label","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","block","onApprove","dispatch","useDispatch","updateUserAllowance","useSousApprove","onStake","isUsingBnb","updateUserStakedBalance","updateUserBalance","useSousStake","onUnstake","isOldSyrup","txHash","console","info","updateUserPendingReward","useSousUnstake","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","log","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","textSubtle","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","f","quoteTokenSymbol","stakingTokenFarm","tokenAddresses","quoteTokenAdresses","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","mb","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/7.36afb24d.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport nftFarm from 'config/abi/NftFarm.json'\nimport nft from 'config/abi/NFT.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport univ2lp from 'config/abi/uni_v2_lp.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const nftMintingFarmAbi = (nftFarm as unknown) as AbiItem\n  return useContract(nftMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const nftAbi = (nft as unknown) as AbiItem\n  return useContract(nftAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useLP = (address: string) => {\n  const lpAbi = (univ2lp as unknown) as AbiItem\n  return useContract(lpAbi, address)\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [1]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total STOS Staked')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {/* {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )} */}\n          {blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Remaining Blocks')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n\n\n  console.log('blocksRemaining', blocksRemaining)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APY')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n// Approve an NFT\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.quoteTokenSymbol)\n    const stakingTokenFarm = farms.find((s) => s.tokenAddresses[CHAIN_ID] === pool.quoteTokenAdresses[CHAIN_ID])\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'SYRUP Pool')}\n          </Heading>\n        </div>\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}