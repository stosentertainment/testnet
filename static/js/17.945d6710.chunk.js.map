{"version":3,"sources":["utils/callHelpers.ts","hooks/useApprove.ts","components/UnlockButton.tsx","hooks/useAllowance.ts","views/Lottery/helpers/CountdownHelpers.ts","contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useSousApprove","sousId","dispatch","useDispatch","useWallet","useSousChef","onApprove","useCallback","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useNftApprove","tokenContract","spenderAddress","UnlockButton","props","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","useLotteryAllowance","useState","allowance","setAllowance","useEffect","fetchAllowance","getAllowance","res","refreshInterval","setInterval","clearInterval","useNftAllowance","dependency","call","console","log","fetch","curday","secTime","ticker","React","createContext","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","startDrawTimer","secs","parseInt","drawTick","dt","setTime","getTimezoneOffset","nowDate","offset","countertime","getFullYear","getMonth","getDate","curtime","diff","getDay","getDrawSeconds","Math","floor","hours","mins","days","startSalesTimer","salesTick","getSalesSeconds","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","daysHoursAndMinutesString","getTicketSaleTime","getLotteryDrawStep","ProgressWrapper","styled","div","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","lotteryHasDrawn","useGetLotteryHasDrawn","timeUntilTicketSale","timeUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","bold","color","Title","Heading","attrs","as","size","theme","colors","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","StyledLoading","Loading","RewardP","TicketsList","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","useWinningNumbers","rewardMatch","number","n","i","length","listItems","map","index","emoji","Array","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","useTotalClaim","claimLoading","claimAmount","onMultiClaim","useMultiClaimLottery","tickets","useTickets","useModal","onPresentMyTickets","handleClaim","window","location","reload","error","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","backdropFilter","background","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","WarningModal","ModalActions","CardActions","TicketCard","requestedApproval","setRequestedApproval","cakeBalance","useTokenBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","BuyTicketModal","max","tokenName","onPresentBuy","handleApprove","toNumber","id","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","ExpandableSectionButton","expanded","aria-label","role","defaultProps","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","toLocaleString","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","useMatchingRewardLength","MatchedNumber3","MatchedNumber2","responsive","marginLeft","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","lotteryNumber","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","onChange","currentTarget","PastRoundCardError","p","message","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","href","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setCurrentLotteryNumber","setMostRecentLotteryNumber","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page","Provider"],"mappings":"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","file":"static/js/17.945d6710.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n\r\n// Approve an NFT\r\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve NFT allowance\r\nexport const useNftAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.log(e.toString())\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n/* New weekly countdown helper, starts every Wednesday 8PM :: Starts Here */\r\n\r\nlet curday\r\nlet secTime\r\nlet ticker\r\n\r\nconst getDrawSeconds = () => {\r\n  const dt = new Date();\r\n  dt.setTime(dt.getTime()+dt.getTimezoneOffset()*60*1000);\r\n  const offset = -300; // Timezone offset for EST in minutes.\r\n  const nowDate = new Date(dt.getTime() + offset*60*1000)\r\n  const dy = 6 // Sunday through Saturday, 0 to 6\r\n  const countertime = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate(), 13, 0, 0) // 13 out of 24 hours = 1pm\r\n\r\n  const curtime = nowDate.getTime() // current time\r\n  const atime = countertime.getTime() // countdown time\r\n  let diff = (atime - curtime) / 1000\r\n  if (diff > 0) {\r\n    curday = dy - nowDate.getDay()\r\n  } else {\r\n    curday = dy - nowDate.getDay() - 1\r\n  } // after countdown time\r\n  if (curday < 0) {\r\n    curday += 7\r\n  } // already after countdown time, switch to next week\r\n  if (diff <= 0) {\r\n    diff += 86400 * 7\r\n  }\r\n  startDrawTimer(diff)\r\n}\r\n\r\nconst getSalesSeconds = () => {\r\n  const dt = new Date();\r\n  dt.setTime(dt.getTime()+dt.getTimezoneOffset()*60*1000);\r\n  const offset = -300; // Timezone offset for EST in minutes.\r\n  const nowDate = new Date(dt.getTime() + offset*60*1000)\r\n  const dy = 6 // Sunday through Saturday, 0 to 6\r\n  const countertime = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate(), 12, 0, 0) // 13 out of 24 hours = 1pm\r\n\r\n  const curtime = nowDate.getTime() // current time\r\n  const atime = countertime.getTime() // countdown time\r\n  let diff = (atime - curtime) / 1000\r\n  if (diff > 0) {\r\n    curday = dy - nowDate.getDay()\r\n  } else {\r\n    curday = dy - nowDate.getDay() - 1\r\n  } // after countdown time\r\n  if (curday < 0) {\r\n    curday += 7\r\n  } // already after countdown time, switch to next week\r\n  if (diff <= 0) {\r\n    diff += 86400 * 7\r\n  }\r\n  startSalesTimer(diff)\r\n}\r\n\r\nconst startDrawTimer = (secs) => {\r\n  secTime = parseInt(secs)\r\n  ticker = setInterval(() => {\r\n    drawTick()\r\n  }, 1000)\r\n  drawTick() // initial count display\r\n}\r\n\r\nconst drawTick = () => {\r\n  let secs = secTime\r\n  if (secs > 0) {\r\n    secTime--\r\n  } else {\r\n    clearInterval(ticker)\r\n    getDrawSeconds() // start over\r\n  }\r\n\r\n  const days = Math.floor(secs / 86400)\r\n  secs %= 86400\r\n  const hours = Math.floor(secs / 3600)\r\n  secs %= 3600\r\n  const mins = Math.floor(secs / 60)\r\n  secs %= 60\r\n\r\n\r\n  return { days: curday, hours, mins }\r\n}\r\n\r\nconst startSalesTimer = (secs) => {\r\n  secTime = parseInt(secs)\r\n  ticker = setInterval(() => {\r\n    salesTick()\r\n  }, 1000)\r\n  salesTick() // initial count display\r\n}\r\n\r\nconst salesTick = () => {\r\n  let secs = secTime\r\n  if (secs > 0) {\r\n    secTime--\r\n  } else {\r\n    clearInterval(ticker)\r\n    getSalesSeconds() // start over\r\n  }\r\n\r\n  const days = Math.floor(secs / 86400)\r\n  secs %= 86400\r\n  const hours = Math.floor(secs / 3600) - 1\r\n  secs %= 3600\r\n  const mins = Math.floor(secs / 60)\r\n  secs %= 60\r\n\r\n\r\n  return { days: curday, hours, mins }\r\n}\r\n/* New weekly countdown helper, starts every Wednesday 8PM :: Ends Here */\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\nconst daysHoursAndMinutesString = (days, hours, mins) => `${parseInt(days)}d, ${parseInt(hours)}h, ${parseInt(mins)}m`\r\n\r\nexport const getTicketSaleTime = (): string => {\r\n  const { days, hours, mins } = salesTick()\r\n  return daysHoursAndMinutesString(days, hours, mins)\r\n}\r\n\r\nexport const getLotteryDrawTime = (): string => {\r\n  const { days, hours, mins } = drawTick()\r\n  return daysHoursAndMinutesString(days, hours, mins)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime()\r\n  const timeUntilLotteryDraw = getLotteryDrawTime()\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"invertedContrast\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(999, 'The STOS Lottery')}</Title>\r\n          <Blurb>{TranslateString(999, 'Buy tickets with STOS')}</Blurb>\r\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={`My Tickets (Total: ${myTicketNumbers.length})`} onDismiss={onDismiss}>\r\n      <TicketsList>{listItems}</TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  font-size: 25px;\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n      window.location.reload();\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(999, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              STOS\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(999, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin} style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your STOS will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button fullWidth onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useLotteryApprove } from 'hooks/useApprove'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const { onApprove } = useLotteryApprove()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"STOS\" />)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(999, 'Approve STOS')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime()\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}  style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem marginBottom=\"20px\">\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} STOS</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            {/* <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link> */}\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      {/* <HowItWorks /> */}\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(999, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(999, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} STOS`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        {/* <PastDrawsHistoryCard /> */}\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  /* useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, []) */\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          {/* <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu> */}\r\n        </Wrapper>\r\n        {/* <Divider /> */}\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}