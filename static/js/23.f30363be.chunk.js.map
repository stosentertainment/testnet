{"version":3,"sources":["views/Home/components/CardValue.tsx","views/Home/components/CakeWinnings.tsx","views/Home/components/LotteryJackpot.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TwitterCard.tsx","views/Home/Home.tsx"],"names":["CardValue","value","decimals","fontSize","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","bold","CakeWinnings","claimAmount","useTotalClaim","getBalanceNumber","LotteryJackpot","lotteryPrizeAmount","useTotalRewards","toLocaleString","maximumFractionDigits","StyledLotteryCard","styled","Card","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","lotteryHasDrawn","useGetLotteryHasDrawn","useState","requesteClaim","setRequestedClaim","TranslateString","useI18n","onMultiClaim","useMultiClaimLottery","cakeBalance","useTokenBalance","getCakeAddress","handleClaim","useCallback","a","console","error","useModal","max","tokenName","onPresentBuy","style","backdropFilter","background","size","mb","src","alt","width","height","id","disabled","onClick","marginRight","variant","StyledCakeStats","Row","CakeStats","totalSupply","useTotalSupplyPrice","farms","useFarms","marketCap","useSTOSPrice","times","lifePerBlock","BigNumber","pow","toNumber","StyledTwitterCard","TwitterCard","dataSource","sourceType","screenName","options","chrome","Hero","mediaQueries","lg","Cards","BaseLayout","sm","CustomText","Text","Home","Page","as","color","LotteryCard"],"mappings":"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","file":"static/js/23.f30363be.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  prefix?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold fontSize={fontSize}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeWinnings = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n  return <CardValue value={getBalanceNumber(claimAmount)} />\r\n}\r\n\r\nexport default CakeWinnings\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\n\r\nconst LotteryJackpot = () => {\r\n  const lotteryPrizeAmount = useTotalRewards()\r\n\r\n  return (\r\n    <Text bold fontSize=\"24px\">\r\n      {getBalanceNumber(lotteryPrizeAmount).toLocaleString(undefined, {\r\n        maximumFractionDigits: 2,\r\n      })}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default LotteryJackpot\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport BuyModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\r\nimport CakeWinnings from './CakeWinnings'\r\nimport LotteryJackpot from './LotteryJackpot'\r\n\r\nconst StyledLotteryCard = styled(Card)`\r\n  background-image: url('/images/ticket-bg.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  margin-top: 24px;\r\n  button {\r\n    flex: 1 0 50%;\r\n  }\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const [requesteClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const [onPresentBuy] = useModal(<BuyModal max={cakeBalance} tokenName=\"STOS\" />)\r\n\r\n  return (\r\n    <StyledLotteryCard style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(550, 'Your Lottery Winnings')}\r\n        </Heading>\r\n        <CardImage src=\"/images/ticket.svg\" alt=\"cake logo\" width={64} height={64} />\r\n        <Block>\r\n          <CakeWinnings />\r\n          <Label>{TranslateString(552, 'STOS to Collect')}</Label>\r\n        </Block>\r\n        <Block>\r\n          <LotteryJackpot />\r\n          <Label>{TranslateString(554, 'Total jackpot this round')}</Label>\r\n        </Block>\r\n        <Actions>\r\n          <Button\r\n            id=\"dashboard-collect-winnings\"\r\n            disabled={getBalanceNumber(claimAmount) === 0 || requesteClaim}\r\n            onClick={handleClaim}\r\n            style={{ marginRight: '8px' }}\r\n          >\r\n            {TranslateString(556, 'Collect Winnings')}\r\n          </Button>\r\n          <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy} disabled={lotteryHasDrawn}>\r\n            {TranslateString(558, 'Buy Tickets')}\r\n          </Button>\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport CardValue from './CardValue'\r\nimport { useFarms, useSTOSPrice, useTotalSupplyPrice } from '../../../state/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  backdrop-filter: blur(3px);\r\n  background: rgba(39, 38, 44, 0.8);\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupplyPrice()\r\n  const farms = useFarms()\r\n  const price = useSTOSPrice()\r\n  const marketCap = price.times(totalSupply)\r\n\r\n  let eggPerBlock = 0\r\n  if (farms && farms[0] && farms[0].lifePerBlock) {\r\n    eggPerBlock = new BigNumber(farms[0].lifePerBlock).div(new BigNumber(10).pow(18)).toNumber()\r\n  }\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(534, 'STOS Stats')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(10005, 'Market Cap')}</Text>\r\n          <CardValue fontSize=\"14px\" value={marketCap.toNumber()} decimals={0} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total Minted')}</Text>\r\n          {totalSupply && <CardValue fontSize=\"14px\" value={0} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total Burned')}</Text>\r\n          <CardValue fontSize=\"14px\" value={0} decimals={0} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(10004, 'Circulating Supply')}</Text>\r\n          {totalSupply && <CardValue fontSize=\"14px\" value={totalSupply.toNumber()} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          {/* <Text fontSize=\"14px\">{TranslateString(540, 'New STOS/block')}</Text>\r\n          <Text bold fontSize=\"14px\">\r\n            {0}\r\n          </Text> */}\r\n        </Row>\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n","import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { Timeline } from 'react-twitter-widgets'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms } from '../../../state/hooks'\r\n\r\nconst StyledTwitterCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  backdrop-filter: blur(3px);\r\n  background: rgba(39, 38, 44, 0.8);\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst TwitterCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTwitterCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(10003, 'Announcements')}\r\n        </Heading>\r\n        <Timeline\r\n          dataSource={{\r\n            sourceType: 'profile',\r\n            screenName: 'safestos',\r\n          }}\r\n          options={{\r\n            height: '300',\r\n            chrome: 'noheader, nofooter',\r\n            width: '400',\r\n          }}\r\n        />\r\n      </CardBody>\r\n    </StyledTwitterCard>\r\n  )\r\n}\r\n\r\nexport default TwitterCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport FarmStakingCard from './components/FarmStakingCard'\r\nimport LotteryCard from './components/LotteryCard'\r\nimport CakeStats from './components/CakeStats'\r\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\r\nimport TwitterCard from './components/TwitterCard'\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  background-image: url('/images/egg/3.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  padding-top: 116px;\r\n  text-align: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    background-image: url('/images/egg/3.png'), url('/images/egg/3b.png');\r\n    background-position: left center, right center;\r\n    height: 165px;\r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 48px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst CustomText = styled(Text)`\r\n  color: orange;\r\n  font-size: 30px;\r\n  text-shadow: 2px 2px 2px #000;\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\r\n          {TranslateString(576, 'STOS Entertainment')}\r\n        </Heading>\r\n        <CustomText fontSize=\"24px\">\r\n          {TranslateString(\r\n            578,\r\n            'A global NFT hospitality project, curating unique entertainment experiences for our NFT & Token holders.',\r\n          )}\r\n        </CustomText>\r\n      </Hero>\r\n      <div>\r\n        <Cards>\r\n          {/* <FarmStakingCard /> */}\r\n          <TwitterCard />\r\n          <LotteryCard />\r\n          <CakeStats />\r\n          {/* <TotalValueLockedCard /> */}\r\n        </Cards>\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}