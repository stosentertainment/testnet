{"version":3,"sources":["views/Home/components/CardValue.tsx","views/Home/components/CakeWinnings.tsx","views/Home/components/LotteryJackpot.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TwitterCard.tsx","views/Home/Home.tsx"],"names":["CardValue","value","decimals","fontSize","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","bold","CakeWinnings","claimAmount","useTotalClaim","getBalanceNumber","LotteryJackpot","lotteryPrizeAmount","useTotalRewards","toLocaleString","maximumFractionDigits","StyledLotteryCard","styled","Card","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","lotteryHasDrawn","useGetLotteryHasDrawn","useState","requesteClaim","setRequestedClaim","TranslateString","useI18n","onMultiClaim","useMultiClaimLottery","cakeBalance","useTokenBalance","getCakeAddress","handleClaim","useCallback","a","console","error","useModal","max","tokenName","onPresentBuy","size","mb","src","alt","width","height","id","disabled","onClick","style","marginRight","variant","StyledCakeStats","Row","CakeStats","totalSupply","useTotalSupplyPrice","farms","useFarms","marketCap","useSTOSPrice","times","lifePerBlock","BigNumber","pow","toNumber","StyledTwitterCard","TwitterCard","dataSource","sourceType","screenName","options","chrome","Hero","mediaQueries","lg","Cards","BaseLayout","sm","CustomText","Text","Home","Page","as","color","LotteryCard"],"mappings":"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","file":"static/js/23.c21efc12.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from './CardValue'\n\nconst CakeWinnings = () => {\n  const { claimAmount } = useTotalClaim()\n  return <CardValue value={getBalanceNumber(claimAmount)} />\n}\n\nexport default CakeWinnings\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalRewards } from 'hooks/useTickets'\n\nconst LotteryJackpot = () => {\n  const lotteryPrizeAmount = useTotalRewards()\n\n  return (\n    <Text bold fontSize=\"24px\">\n      {getBalanceNumber(lotteryPrizeAmount).toLocaleString(undefined, {\n        maximumFractionDigits: 2,\n      })}\n    </Text>\n  )\n}\n\nexport default LotteryJackpot\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, useModal } from '@pancakeswap-libs/uikit'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport BuyModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport CakeWinnings from './CakeWinnings'\nimport LotteryJackpot from './LotteryJackpot'\n\nconst StyledLotteryCard = styled(Card)`\n  background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  margin-top: 24px;\n  button {\n    flex: 1 0 50%;\n  }\n`\n\nconst FarmedStakingCard = () => {\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const [requesteClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const [onPresentBuy] = useModal(<BuyModal max={cakeBalance} tokenName=\"STOS\" />)\n\n  return (\n    <StyledLotteryCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(550, 'Your Lottery Winnings')}\n        </Heading>\n        <CardImage src=\"/images/ticket.svg\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <CakeWinnings />\n          <Label>{TranslateString(552, 'STOS to Collect')}</Label>\n        </Block>\n        <Block>\n          <LotteryJackpot />\n          <Label>{TranslateString(554, 'Total jackpot this round')}</Label>\n        </Block>\n        <Actions>\n          <Button\n            id=\"dashboard-collect-winnings\"\n            disabled={getBalanceNumber(claimAmount) === 0 || requesteClaim}\n            onClick={handleClaim}\n            style={{ marginRight: '8px' }}\n          >\n            {TranslateString(556, 'Collect Winnings')}\n          </Button>\n          <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy} disabled={lotteryHasDrawn}>\n            {TranslateString(558, 'Buy Tickets')}\n          </Button>\n        </Actions>\n      </CardBody>\n    </StyledLotteryCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport CardValue from './CardValue'\nimport { useFarms, useSTOSPrice, useTotalSupplyPrice } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  backdrop-filter: blur(3px);\n  background: rgba(39, 38, 44, 0.8);\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupplyPrice()\n  const farms = useFarms()\n  const price = useSTOSPrice()\n  const marketCap = price.times(totalSupply)\n\n  let eggPerBlock = 0\n  if (farms && farms[0] && farms[0].lifePerBlock) {\n    eggPerBlock = new BigNumber(farms[0].lifePerBlock).div(new BigNumber(10).pow(18)).toNumber()\n  }\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'STOS Stats')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10005, 'Market Cap')}</Text>\n          <CardValue fontSize=\"14px\" value={marketCap.toNumber()} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total Minted')}</Text>\n          {totalSupply && <CardValue fontSize=\"14px\" value={0} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total Burned')}</Text>\n          <CardValue fontSize=\"14px\" value={0} decimals={0} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10004, 'Circulating Supply')}</Text>\n          {totalSupply && <CardValue fontSize=\"14px\" value={totalSupply.toNumber()} decimals={0} />}\n        </Row>\n        <Row>\n          {/* <Text fontSize=\"14px\">{TranslateString(540, 'New STOS/block')}</Text>\n          <Text bold fontSize=\"14px\">\n            {0}\n          </Text> */}\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { Timeline } from 'react-twitter-widgets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms } from '../../../state/hooks'\n\nconst StyledTwitterCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  backdrop-filter: blur(3px);\n  background: rgba(39, 38, 44, 0.8);\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst TwitterCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTwitterCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(10003, 'Announcements')}\n        </Heading>\n        <Timeline\n          dataSource={{\n            sourceType: 'profile',\n            screenName: 'safestos',\n          }}\n          options={{\n            height: '300',\n            chrome: 'noheader, nofooter',\n            width: '400',\n          }}\n        />\n      </CardBody>\n    </StyledTwitterCard>\n  )\n}\n\nexport default TwitterCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from './components/FarmStakingCard'\nimport LotteryCard from './components/LotteryCard'\nimport CakeStats from './components/CakeStats'\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\nimport TwitterCard from './components/TwitterCard'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/egg/3.png');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/egg/3.png'), url('/images/egg/3b.png');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 48px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CustomText = styled(Text)`\n  color: orange;\n  font-size: 30px;\n  text-shadow: 2px 2px 2px #000;\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n          {TranslateString(576, 'STOS Entertainment')}\n        </Heading>\n        <CustomText fontSize=\"24px\">\n          {TranslateString(\n            578,\n            'A global NFT hospitality project, curating unique entertainment experiences for our NFT & Token holders.',\n          )}\n        </CustomText>\n      </Hero>\n      <div>\n        <Cards>\n          {/* <FarmStakingCard /> */}\n          <TwitterCard />\n          <LotteryCard />\n          <CakeStats />\n          {/* <TotalValueLockedCard /> */}\n        </Cards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}